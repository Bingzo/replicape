SPI 2.1 does not work out of the box, perhaps it can be enabled in the 
kernel. 
Thus the spi1_cs1 pin must be toggled manually: 
nCS1 = p9_42 = GPIO0_7 = ecap0_
echo 0x7 > /sys/kernel/debug/omap_mux/ecap0_in_pwm0_out
echo 7 > /sys/class/gpio/export
echo out >  /sys/class/gpio/gpio7/direction
echo 1 > /sys/class/gpio/gpio7/value
echo 0 > /sys/class/gpio/gpio7/value


For manually stepping SMD X: 
DirX   = pin11 = GPIO1_13 = gpmc_ad13
StepX  = pin12 = GPIO1_12 = gpmc_ad12
FaultX = pin13 = GPIO0_23 = gpmc_ad9 

echo 44 > /sys/class/gpio/export
echo 45 > /sys/class/gpio/export
echo 23 > /sys/class/gpio/export

Set the nFault pin to input, disable pullup 
echo 0x2F > /sys/kernel/debug/omap_mux/gpmc_ad9

Both should be muxed to mode 7 on boot. 

echo out > /sys/class/gpio/gpio44/direction 
echo out > /sys/class/gpio/gpio45/direction 

Value for SMD: 
D0 = DECAY   = X
D1 = MODE0   = X
D2 = MODE1   = X
D3 = MODE2 	 = X
D4 = nRESET  = 1
D5 = nSLEEP  = 1
D6 = nENABLE = 0
D7 = 		 = 0
Trying 0x30..


Configuration of EEPROM
=======================
Use the mkeeprom utility..


DAC control
=============
DAC is located on spi2.0. 
Use mode 1 (CPOL = 0, CPHA = 1).
for 16bit words, the bytes have changed position?? - Instead, go for 8-bit words
See scripts/dac.py for testing

# Heaters
=========
Heater2 = Ext1 = p8_16 = GPIO1_14 = gpmc_ad14
To turn on: 
echo 0x07 >  /sys/kernel/debug/omap_mux/gpmc_ad2
echo 46 > /sys/class/gpio/export
echo out > /sys/class/gpio/gpio46/direction
echo 1 > /sys/class/gpio/gpio46/value

Heater1 = Ext2 = p8_14 = GPIO0_26 = gpmc_ad10
echo 0x07 > /sys/kernel/debug/omap_mux/gpmc_ad10
echo 26 > /sys/class/gpio/export
echo out > /sys/class/gpio/gpio26/direction
echo 1 > /sys/class/gpio/gpio26/value 


PCA9685PW
=========
I2C2 connected together with I2C1 for now. 
Adress: 0x70
NIF5002 are N-channel MOSFETs, thus use INVRT = 0, OUTDR = 1
MODE2 (0x01) bit 4 = INVRT = 0, bit 2 = 1
i2cset -y 3 0x70 0x01 0x03

i2cset -y 3 0x70 0x01 0x02 # Read mode1


I2C for python
==============
Created the PWM-script 


